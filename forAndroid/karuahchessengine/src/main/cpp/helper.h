/*
Karuah Chess is a chess playing program
Copyright (C) 2020-2023 Karuah Software

Karuah Chess is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Karuah Chess is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

#pragma once
#include <map>
#include <vector>
#include <string>


namespace helper {

	// enums
	enum class RayTypeEnum : int { HorizontalVertical = 0, Diagonal = 1 };
	enum class MoveTypeEnum : int { None = 0, Normal = 1, EnPassant = 2, Castle = 3, Promotion = 4 };
	enum class BoardStatusEnum : int { Ready = 0, Checkmate = 1, Stalemate = 2, Resigned = 3 };
	enum class PawnPromotionEnum : int { Knight = 2, Bishop = 3, Rook = 4, Queen = 5 };
	enum class PatternEnum : int { Knight = 2, Bishop = 3, Rook = 4, Queen = 5 };

	constexpr int BLACK_PAWN_INDEX = 0;
	constexpr int BLACK_ROOK_INDEX = 1;
	constexpr int BLACK_KNIGHT_INDEX = 2;
	constexpr int BLACK_BISHOP_INDEX = 3;
	constexpr int BLACK_QUEEN_INDEX = 4;
	constexpr int BLACK_KING_INDEX = 5;

	constexpr int WHITE_PAWN_INDEX = 6;
	constexpr int WHITE_ROOK_INDEX = 7;
	constexpr int WHITE_KNIGHT_INDEX = 8;
	constexpr int WHITE_BISHOP_INDEX = 9;
	constexpr int WHITE_QUEEN_INDEX = 10;
	constexpr int WHITE_KING_INDEX = 11;

	constexpr int BLACK_PAWN_INDEX_64 = BLACK_PAWN_INDEX * 64;
	constexpr int BLACK_ROOK_INDEX_64 = BLACK_ROOK_INDEX * 64;
	constexpr int BLACK_KNIGHT_INDEX_64 = BLACK_KNIGHT_INDEX * 64;
	constexpr int BLACK_BISHOP_INDEX_64 = BLACK_BISHOP_INDEX * 64;
	constexpr int BLACK_QUEEN_INDEX_64 = BLACK_QUEEN_INDEX * 64;
	constexpr int BLACK_KING_INDEX_64 = BLACK_KING_INDEX * 64;

	constexpr int WHITE_PAWN_INDEX_64 = WHITE_PAWN_INDEX * 64;
	constexpr int WHITE_ROOK_INDEX_64 = WHITE_ROOK_INDEX * 64;
	constexpr int WHITE_KNIGHT_INDEX_64 = WHITE_KNIGHT_INDEX * 64;
	constexpr int WHITE_BISHOP_INDEX_64 = WHITE_BISHOP_INDEX * 64;
	constexpr int WHITE_QUEEN_INDEX_64 = WHITE_QUEEN_INDEX * 64;
	constexpr int WHITE_KING_INDEX_64 = WHITE_KING_INDEX * 64;


	constexpr uint64_t BITMASK = 0b10000000'00000000'00000000'00000000'00000000'00000000'00000000'00000000uLL;
	constexpr int32_t BLOCKERBITMASK = 0b00000000'00000000'00000000'00000001u;
	constexpr uint64_t EDGEMASK_NS = 0b11111111'00000000'00000000'00000000'00000000'00000000'00000000'11111111uLL;
	constexpr uint64_t EDGEMASK_EW = 0b10000001'10000001'10000001'10000001'10000001'10000001'10000001'10000001uLL;
	constexpr uint64_t EDGEMASK_N = 0b11111111'00000000'00000000'00000000'00000000'00000000'00000000'00000000uLL;
	constexpr uint64_t EDGEMASK_S = 0b00000000'00000000'00000000'00000000'00000000'00000000'00000000'11111111uLL;
	constexpr uint64_t EDGEMASK_E = 0b00000001'00000001'00000001'00000001'00000001'00000001'00000001'00000001uLL;
	constexpr uint64_t EDGEMASK_W = 0b10000000'10000000'10000000'10000000'10000000'10000000'10000000'10000000uLL;
	constexpr uint64_t RANK1 = 0b00000000'00000000'00000000'00000000'00000000'00000000'00000000'11111111uLL;
	constexpr uint64_t RANK8 = 0b11111111'00000000'00000000'00000000'00000000'00000000'00000000'00000000uLL;
	constexpr uint64_t FILEA = 0b10000000'10000000'10000000'10000000'10000000'10000000'10000000'10000000uLL;
	constexpr uint64_t FILEH = 0b00000001'00000001'00000001'00000001'00000001'00000001'00000001'00000001uLL;



	// Black pieces
	constexpr int BLACK_PAWN_SPIN = -1;
	constexpr int BLACK_ROOK_SPIN = -4;
	constexpr int BLACK_KNIGHT_SPIN = -2;
	constexpr int BLACK_BISHOP_SPIN = -3;
	constexpr int BLACK_QUEEN_SPIN = -5;
	constexpr int BLACK_KING_SPIN = -6;


	// White Pieces
	constexpr int WHITE_PAWN_SPIN = 1;
	constexpr int WHITE_ROOK_SPIN = 4;
	constexpr int WHITE_KNIGHT_SPIN = 2;
	constexpr int WHITE_BISHOP_SPIN = 3;
	constexpr int WHITE_QUEEN_SPIN = 5;
	constexpr int WHITE_KING_SPIN = 6;

	// Pieces
	constexpr int PAWN_SPIN = 1;
	constexpr int ROOK_SPIN = 4;
	constexpr int KNIGHT_SPIN = 2;
	constexpr int BISHOP_SPIN = 3;
	constexpr int QUEEN_SPIN = 5;
	constexpr int KING_SPIN = 6;

	// Colours
	constexpr int WHITEPIECE = 1;
	constexpr int BLACKPIECE = -1;

	// Errors
	constexpr int NNUE_ERROR = 101;
	constexpr int NNUE_MEMORY_ALLOCATION_ERROR = 102;
	constexpr int NNUE_FILE_OPEN_ERROR = 103;	
	constexpr int TRANSPOSITIONTABLE_ERROR = 104;
	constexpr int FREELARGEPAGEMEMORY_ERROR = 105;
	
	// Arrays
	extern uint64_t RowMask[64];
	extern uint64_t NorthRay[64];
	extern uint64_t SouthRay[64];
	extern uint64_t EastRay[64];
	extern uint64_t WestRay[64];
	extern uint64_t NorthWestRay[64];
	extern uint64_t NorthEastRay[64];
	extern uint64_t SouthWestRay[64];
	extern uint64_t SouthEastRay[64];

	extern int CastleIndex[64][2];

	extern uint64_t DiagonalRay[64];
	extern uint64_t HorizontalVerticalRay[64];
	extern uint64_t HorizontalVerticalMove[64][4097];
	extern uint64_t HorizontalVerticalMoveXRay[64][4097];
	extern uint64_t DiagonalMove[64][4097];
	extern uint64_t DiagonalMoveXRay[64][4097];
	extern uint64_t KnightMove[64];
	extern uint64_t KingMove[64];

	extern const std::map<int, std::string> BoardCoordinateDict;

	constexpr uint64_t HorizontalVerticalMagic[64] = {
			0b01100011'11001111'00011111'01000001'01100010'10000101'00000100'00000110uLL,
			0b00110110'11101110'10111110'10011010'01100111'11100110'11001010'01001100uLL,
			0b01111110'11100111'10000001'00111101'01100010'00000000'00100110'10101110uLL,
			0b00101001'11000001'01100010'00001000'00000000'01100010'00110000'00101001uLL,
			0b00110100'11000001'11011010'00101011'01000100'00000010'00000000'01011110uLL,
			0b00110011'00010101'11101011'11101100'00001010'11111011'00111110'01101110uLL,
			0b00101000'11000100'01100000'00100100'01110100'00001010'11100101'11010110uLL,
			0b00101000'01001000'00010000'10000011'00100010'00000001'00000000'01000010uLL,
			0b00000110'11010000'00001111'01011001'00111110'00110110'01111100'10111000uLL,
			0b01011000'10111100'11101111'10100110'01001110'11001100'00011101'00011010uLL,
			0b01001101'00101101'11101111'10001001'00111011'11011011'11010000'00101100uLL,
			0b00010101'11001010'10110010'10101011'00011111'01001001'01110010'10111000uLL,
			0b01110001'10100011'00001101'01110000'00001110'00111111'10101010'00001110uLL,
			0b00111000'11001100'11101100'00100101'00001100'11000010'10100110'00100011uLL,
			0b01010100'10101011'11111001'10101011'01100101'01100011'00100111'01001111uLL,
			0b01000101'10010010'01011100'01101011'00011111'00001111'00101010'00000000uLL,
			0b01110100'10000011'10101101'00010111'01000010'01001001'11101010'01010010uLL,
			0b00101110'01011000'10000110'01100110'01110010'11000011'00111001'11110100uLL,
			0b00001001'01000101'10101110'10110101'00000110'11100110'00011110'01000000uLL,
			0b00001110'10010001'00010110'10100101'01000011'10100100'00011000'00001100uLL,
			0b01101101'11011101'00110011'10111001'01110111'11000111'00011011'01110001uLL,
			0b01011101'01101010'10010101'01110110'00111001'11100011'11111111'10100111uLL,
			0b00101010'11011010'10000000'01011100'01101110'00101000'10110000'01000000uLL,
			0b00010100'11110001'00100101'10001100'00111110'11001111'10000010'01100000uLL,
			0b00000110'11100111'01000011'10000011'01111001'01000000'01100101'00011011uLL,
			0b01110100'00011011'01101001'10011010'01000100'01100000'10110010'00110011uLL,
			0b01101100'00110101'11101101'11111011'00000111'00001011'10010101'11010011uLL,
			0b00110111'10101010'00010000'00101010'00100000'11100111'01101010'10101111uLL,
			0b00110001'11000000'00101010'10100010'00111001'11111101'01011110'11100011uLL,
			0b01010101'00011000'00010001'01101100'00100111'11101100'10010100'11110101uLL,
			0b00000000'01000001'00000000'01000100'00111010'11000000'10110011'01111010uLL,
			0b00000000'10010110'10100110'00101111'01110010'10110100'10100101'10110001uLL,
			0b00110010'10110100'10011101'01011000'00100000'11101111'00101110'00110001uLL,
			0b01010101'11001001'01111101'00000101'01101111'00110100'10100010'01111111uLL,
			0b01010000'11010010'11010010'10110010'01001000'10010110'10010000'00110010uLL,
			0b01111011'00010001'01101101'10010110'00111011'00000100'11100111'10011101uLL,
			0b00001100'10110010'11010101'11100111'01010000'01001100'11001010'00001111uLL,
			0b00100111'10111010'00111000'01000001'01010010'10101011'10100100'10111101uLL,
			0b01100011'00000010'10101010'11110110'01111010'01110111'01000101'10010010uLL,
			0b00011111'00110010'00001010'11100100'00101111'11011110'11010011'11001110uLL,
			0b01101110'10010100'10000111'11100011'00001110'01001011'11110000'00111000uLL,
			0b01111000'11101010'10111100'01001000'01100101'11101110'10100110'10000100uLL,
			0b01110011'00101101'00000100'11011110'00011001'10011110'11000111'11100001uLL,
			0b01111000'10100111'11110110'11000101'00111110'00100111'01011110'01110100uLL,
			0b00100110'11110111'00011010'11100010'01101101'10101110'10000011'11100000uLL,
			0b00101110'11101011'10001001'00101010'00010100'00011110'01011010'11101001uLL,
			0b00000010'11110001'11100001'10010100'01100111'11110111'11000011'01001011uLL,
			0b00100011'01000001'10010101'00110000'00000001'10000101'01000000'00100011uLL,
			0b00010000'11111010'10110001'00001011'01110011'11001100'11001111'11111111uLL,
			0b01111100'10101101'10010011'11010001'00110010'01001100'11000000'00111000uLL,
			0b00111101'10011001'11000111'00011010'00110010'11111000'11000111'00011111uLL,
			0b00100110'01110101'11001100'01101100'00000100'10110000'11000010'00101110uLL,
			0b01101101'01010010'10011011'11111111'01101010'01010011'11001000'00101011uLL,
			0b00011010'10110110'10001000'10000010'01000100'00000111'01001000'10001010uLL,
			0b00001111'00100001'10100110'00000101'00100100'01110000'01010101'10101101uLL,
			0b01010111'10001101'10110101'10010000'00000100'01111011'01000000'00000010uLL,
			0b00000010'00000000'00000100'00000010'01100000'10000011'00000000'11000010uLL,
			0b00000000'10000010'00000000'00000001'00000000'00000000'01000000'10000000uLL,
			0b00000010'00000000'00001000'00000010'00000100'00000001'00001000'10010000uLL,
			0b00000110'00000000'00001000'00000001'00000100'00000010'00001000'00010000uLL,
			0b00100110'11000100'00000000'00000100'00001000'00010000'00000000'00100000uLL,
			0b00000010'00000000'00001000'00000110'00001000'00110100'01100000'00010100uLL,
			0b00000000'00001011'01001000'00000000'00100000'00010000'01000000'00010000uLL,
			0b00000000'10000000'00000010'10010000'01000000'00000001'10000010'00100101uLL
	};

	constexpr uint64_t DiagonalMagic[64] = {
			0b01000011'00010110'01110101'01101111'00001100'00110100'10101000'10001011uLL,
			0b00100110'00100010'00110011'11100111'01010100'10100001'01000110'00100101uLL,
			0b01101011'10110100'11110010'00011000'01111000'10001011'10100000'00011110uLL,
			0b01011001'10000101'01111010'00101101'01000111'01000010'01001110'11010101uLL,
			0b01010000'10110010'00101110'10000101'01001000'01111100'10011001'00100001uLL,
			0b00010001'11110111'10011101'01110100'00001110'01000100'00100111'01010110uLL,
			0b00100001'01111010'01010100'00110101'01001001'10100100'11111000'11010001uLL,
			0b00100010'01010111'01001101'10011101'00110111'10100100'11110101'00111000uLL,
			0b01101001'10010010'11100100'11101101'01110100'10001111'10000101'11000110uLL,
			0b01111011'11101101'00001011'01101101'01010000'10000101'01011101'00100111uLL,
			0b01100001'01011101'10010101'01101100'01111011'10101011'01100011'00001001uLL,
			0b01010001'01111100'11111011'10010000'01011010'01010110'00010001'11111011uLL,
			0b01101110'00000000'00001001'10000011'00101110'10100101'11111010'11111101uLL,
			0b00100001'10100100'11111110'11001110'01110100'00100101'10000010'00010110uLL,
			0b01001000'01111010'11111101'10111100'01010000'01101010'10000100'00101000uLL,
			0b00111111'11100110'00000001'01000111'01011111'00001001'01110001'00110110uLL,
			0b01110101'01000111'11101001'11100000'00100101'11101111'11001111'01011011uLL,
			0b01111011'00011100'01011000'01111110'00001111'10110101'00100100'00110111uLL,
			0b01101111'11010111'10011110'10011011'01010000'00100010'00110110'01010001uLL,
			0b00101100'11100111'01010110'01111110'01011110'00011101'00011001'00111011uLL,
			0b00011010'10000000'01001100'00001001'01110000'11100111'00000110'10110011uLL,
			0b00110111'01100110'00011011'00101100'01101100'11110101'11010101'01110101uLL,
			0b01011011'01001011'00100000'10101010'01000111'01101011'00010010'01100101uLL,
			0b00111010'10110111'10101100'11111010'01001011'11001100'00100001'11101011uLL,
			0b01010110'11100110'10100001'01010000'01100101'01011111'11111000'00010110uLL,
			0b00001000'10010110'10010111'11011010'00110010'11101110'00101100'00111101uLL,
			0b01001110'10001000'10100000'01010010'00010010'10100010'00101001'01100110uLL,
			0b00111101'10100100'10110010'00101001'00100011'11000001'11011001'11101100uLL,
			0b01111101'00011100'01100111'00000011'00001001'11100111'00001110'01111010uLL,
			0b01000101'11101111'10111000'11111100'00000100'01111100'01010001'10011101uLL,
			0b01100011'10111010'10110010'00110001'00010110'11010011'11110010'11011101uLL,
			0b01011101'10000000'01110011'00111001'00011010'11011010'10111111'10011111uLL,
			0b01100101'01110100'01100001'10000100'01100001'01100110'10000001'00001001uLL,
			0b00000110'11000001'00111010'11000001'00010000'10001101'00100011'10000010uLL,
			0b01110110'01000000'10110001'00011001'01111000'11111000'11010111'00110101uLL,
			0b00101011'00001101'11000111'10010101'00011100'00110001'00001101'01010101uLL,
			0b01000101'01010101'10001110'10101000'00100110'10100100'11111011'10000000uLL,
			0b01011001'01101011'10001110'11100010'01100110'00111110'01011000'10100000uLL,
			0b00001110'01100000'11001101'10011110'01110110'01101101'11111101'01100010uLL,
			0b01100110'01011010'10111011'00110111'00101101'10000000'10100011'00111010uLL,
			0b01000000'10110101'10011100'01010011'00111110'00011101'00011100'10111010uLL,
			0b01001111'10000011'11011101'11011101'00001001'10011011'01011110'11011111uLL,
			0b00100111'00101110'10100101'10001011'01000110'10110110'11000111'11101100uLL,
			0b01000110'10101111'11100101'10001000'01000010'11100100'01001011'11111110uLL,
			0b01011010'01101000'00100100'00101101'00010111'11001101'10110100'11011110uLL,
			0b01101010'00010101'10110111'00010000'01010110'11010100'11001011'11000101uLL,
			0b00101111'00011010'10111000'00001100'00101001'01000111'00011011'10111000uLL,
			0b01010001'10101100'01011111'10100101'01101010'11001001'10000100'01010110uLL,
			0b00001111'10100011'11011000'00111111'01011001'01111011'11110000'00000011uLL,
			0b01110000'00000000'00111000'00101111'00100000'00011001'01111101'11110000uLL,
			0b01101011'11111101'00100110'00010001'00000100'11110011'00010010'00111110uLL,
			0b01110000'00011100'10001101'01000110'01000001'01110001'00001110'01001111uLL,
			0b00010111'01011100'00111101'10011101'01000000'01110100'11001110'00100110uLL,
			0b01011101'01001100'00001101'00101111'01111010'11010111'01110101'10000001uLL,
			0b01111011'11100000'11011111'01001011'00100000'11001110'10110011'01000001uLL,
			0b01100111'00110110'00100110'01001010'01010101'01110011'11011101'10111001uLL,
			0b01000101'01001111'00000100'11111001'00110011'10111100'00001000'00110000uLL,
			0b01111001'10011111'00011110'01001101'00000010'01110001'01000010'10101010uLL,
			0b01001100'00111100'11010111'01010010'01000001'10011101'11011010'00000100uLL,
			0b00101110'10100010'00010000'11100001'00011111'11100110'00010101'10111001uLL,
			0b01110000'10000001'10111011'00101011'00000100'10001101'11011011'11011111uLL,
			0b01000110'11100011'11100011'00111111'01000011'10011101'00100011'10110011uLL,
			0b01010100'00000111'01100101'10101001'01111000'10101111'00010010'00010111uLL,
			0b01011010'10000000'10100110'11010010'00100100'10111011'00011101'11010101uLL
	};


	/// <summary>
	/// Unique random numbers for board
	/// </summary>
	constexpr uint64_t RandomBoardArray[768] = {
			12844339324719734471uLL,13017710293319096410uLL,7186654850010005571uLL,12203677342623424677uLL,9247743043858298616uLL,15553375453051894211uLL,12067591433958283937uLL,3373372816654277729uLL,
			12567129760746279355uLL,17641165642225594345uLL,5057948692019852935uLL,2579199128476949758uLL,4028686659452027240uLL,6915048545666069491uLL,5378786290058112842uLL,14032149415768440416uLL,
			14035980630158707683uLL,14862555449241356238uLL,2270321633638448805uLL,13667182077007541148uLL,8600336317624434486uLL,18003718634579420646uLL,1532202773908375548uLL,4040533932973932553uLL,
			2053019665640248603uLL,10189859931522101028uLL,13506187429025981912uLL,667105275004571644uLL,3636281412924929746uLL,7023268089666638281uLL,9101962779895022678uLL,1974526460441109606uLL,
			3305512283853509421uLL,6025412451395157294uLL,2890382493821242712uLL,15841346229838102438uLL,14805813443167375146uLL,15477738366511893093uLL,8758081480587599878uLL,7617511182492016438uLL,
			9831873515302405094uLL,12402330990256352149uLL,3902240896351183732uLL,10285605613049493572uLL,3672658889977427604uLL,5198637109312213358uLL,6556713100411950210uLL,14247190475418105244uLL,
			10150786615852760493uLL,18396605057562366379uLL,8483464047025408786uLL,4535777143735119352uLL,12367669157403750680uLL,13656715027313370997uLL,6569130561822236583uLL,6504330550954966209uLL,
			5218795953212943071uLL,10556078613084837033uLL,15838594455544327271uLL,7962058907909111494uLL,14157527103450539362uLL,633097933516589618uLL,16257322673893331389uLL,13827201194383942941uLL,
			14100334576468531093uLL,10278183790122986354uLL,14309975170320212084uLL,2056584304090038728uLL,5363960499480660838uLL,12334561303238380835uLL,6279513755815546113uLL,18319638903195421183uLL,
			15557126000739047905uLL,11357564170031615536uLL,1630004981379449619uLL,13025564858112831077uLL,18374410634550431569uLL,15268918937793444007uLL,17373271291867612714uLL,1557410264176063931uLL,
			1044502664319843209uLL,5563474437217599300uLL,1045823400350829959uLL,11428940969283852213uLL,6426430355840259099uLL,5506757683715060807uLL,449562084879201471uLL,9424720919935102263uLL,
			4823373652916482979uLL,14276007871965256093uLL,17314376890163316268uLL,17481606341896019734uLL,12647015805227006824uLL,11998041302248157828uLL,11346535501124216462uLL,8784905642408877930uLL,
			17575264848382147005uLL,9003060755675331138uLL,7712312408779343645uLL,4795306787044700164uLL,12349564381401349768uLL,2201941029516798782uLL,1815716046742199853uLL,16777361142279687986uLL,
			11969771825662002734uLL,2789935917202437604uLL,14998025035268010530uLL,1484446742648857675uLL,76560973212797973uLL,6569301345666819457uLL,9122699207611833880uLL,1455944276025491683uLL,
			2475021380736049115uLL,8289852274700554147uLL,13797968640038352890uLL,17538748385786888754uLL,974193226175931185uLL,7765807024637169028uLL,11580056559902773300uLL,8964359268064068963uLL,
			17501031762350246184uLL,9324265968606538161uLL,10438221570749455804uLL,13243734199510314543uLL,991338346575838949uLL,17303288894668799471uLL,2685689602879418142uLL,9213189070902404652uLL,
			14665716628464621470uLL,10231668528855599516uLL,7584315328703729932uLL,2046962218295278328uLL,530827125206102561uLL,18217918666593848039uLL,13322831747573749800uLL,6233463422445929239uLL,
			3177504088427912929uLL,17070914856569268019uLL,17093504565122770662uLL,3608094241842222413uLL,7339377501246648649uLL,295570118725944063uLL,10196236472796863450uLL,12435677307598875301uLL,
			3672763315232607700uLL,4213183909920392268uLL,17953112372337319738uLL,11008501606839533169uLL,10682096921916945582uLL,7574188285975772770uLL,10382862640263305138uLL,4489860443723697511uLL,
			14748322400133552510uLL,9645688692858897120uLL,6271339976468107938uLL,3623768442852579101uLL,2329732126322803566uLL,706291614894507498uLL,4090117395080132016uLL,12220706784278449808uLL,
			14015017410443651575uLL,15914801507919263294uLL,7645022895438001865uLL,4399408528867135872uLL,6337778368277574956uLL,15389095296499229494uLL,7194529394070930353uLL,7494559760826367632uLL,
			8792162704892175336uLL,8342907431328217218uLL,1360212579913702783uLL,3455088098491363869uLL,12065390257105342368uLL,11117323500780075582uLL,8522646955481074230uLL,10459657170693879618uLL,
			11524790319414384645uLL,8304773334654918317uLL,1868899754564626345uLL,1432423184551756745uLL,17284319613472966417uLL,14347727651766658201uLL,6567762864588267575uLL,12705468234531435561uLL,
			7806855933095979582uLL,7769216303061906377uLL,12721753273931167141uLL,13107135159542416226uLL,12730352914898610322uLL,6578243055937543625uLL,9114481974005978530uLL,16460850109545850526uLL,
			6405443487813368014uLL,14230451687291757513uLL,7900528234931237816uLL,1926014373982069867uLL,17181553260994327020uLL,16507284464851483377uLL,9030362300113987754uLL,3853254118285805523uLL,
			10744674685895133289uLL,14171339858063398594uLL,11632788166132865359uLL,7978667038751557663uLL,16803807334290986624uLL,2159680627442502028uLL,8214641361596905437uLL,15433548779383900121uLL,
			3532563953019766108uLL,7317183871008230758uLL,4369369823789238927uLL,10452863829546177173uLL,12459781916103944858uLL,18265357210931693040uLL,4477070293232939708uLL,6767662908963412769uLL,
			9638049157034809277uLL,18419905998547228640uLL,15842258789210891158uLL,6853855969037711368uLL,9320392691705501465uLL,8886852489201915057uLL,13470012326137190714uLL,1645495067412264251uLL,
			16589603397801746041uLL,10851913496851986251uLL,38054369472394147uLL,13219662414305855208uLL,2095653611045656383uLL,9143879509229937439uLL,5176463821212494939uLL,11527643658717927063uLL,
			7042353390459448001uLL,5911510602755764381uLL,13856201267664439968uLL,13062750192750189888uLL,16385827705831948457uLL,12733148701812041329uLL,11888160469782812813uLL,7370834503570118942uLL,
			8779622379127210279uLL,322095759426949219uLL,7980166296370666151uLL,18155886595472767236uLL,1199685150516139100uLL,14790665521315890432uLL,16820676044227049697uLL,13388838916947018690uLL,
			9564434483837424281uLL,396696752381404979uLL,5781747359654387959uLL,5333061951310588644uLL,3337223809593503222uLL,7516857199841152956uLL,13051886322775983873uLL,6696278351111868182uLL,
			14098209183945716900uLL,12070812505295032656uLL,6472963487135144857uLL,14303640267436332491uLL,1935041521060643489uLL,17415165945334011105uLL,1107005014586000075uLL,10572646949907849503uLL,
			17484288432261213840uLL,12768108983704463553uLL,14020953325978292838uLL,5456218456434762789uLL,2251848963056765530uLL,12652706685447571421uLL,2508278844433247664uLL,6857721033816646681uLL,
			4178978285068280304uLL,12902825154763629650uLL,2952645359797537229uLL,6426059210162746042uLL,17948157202293912027uLL,937896097999673390uLL,653181460659874451uLL,6875852408374913000uLL,
			2581196399855030263uLL,12078597478978123509uLL,5352040464205435821uLL,4585555533933022944uLL,6024365166059396716uLL,2062815916666870999uLL,12893039867515866311uLL,14604427409249506569uLL,
			15381032522562022610uLL,5126407342057597113uLL,2723448447170628334uLL,9077486139479130673uLL,6955059272091314606uLL,6945069570386912791uLL,3592680256478511984uLL,236675611980522849uLL,
			11004876497128705838uLL,6425088931843362885uLL,16993607239336775201uLL,4623352101619603533uLL,4936289820497167902uLL,16202354905435430217uLL,14070299304244985530uLL,15157728299387091961uLL,
			16711168693293912359uLL,18084623365296875340uLL,6887622858955929534uLL,4084830145346689282uLL,13509893886871369218uLL,8908368001789266645uLL,7373480161045897346uLL,1263527757440027131uLL,
			17730839192329455158uLL,2369123908258902586uLL,2672274726100055736uLL,16279794370656717091uLL,16802636100971334274uLL,3009211819993764303uLL,7087550359309315625uLL,14428460299701467889uLL,
			14167875022092420932uLL,5039567772203321736uLL,8746227012193369095uLL,11436515681492216493uLL,14043394529670519380uLL,14785662110202236240uLL,7901409943691739977uLL,15949594696056797542uLL,
			16021981697927942354uLL,8367521293582136151uLL,16295360656205265657uLL,18006177724947119922uLL,14291570246365327413uLL,18240728543617064426uLL,1346347973040174937uLL,10133635157264165868uLL,
			2092439087680880912uLL,2083650545091688293uLL,333193442892450074uLL,236752029855060736uLL,9492053892820964092uLL,5688362933466104430uLL,6044353854649009665uLL,5216726896977860833uLL,
			10188113397922609645uLL,16217882261542376527uLL,2320716097390448162uLL,16432097877395055153uLL,10170784423238530716uLL,7229746917375447202uLL,1606294182522893639uLL,14237851899559506692uLL,
			4563649762129834889uLL,17914469062013808872uLL,16778336867263787468uLL,11506169304239644204uLL,17229872963083329273uLL,748685664274468448uLL,16810064840498996439uLL,14427912118627672986uLL,
			18359920357755088450uLL,5639276527668374036uLL,11652503178074762170uLL,2544237415388071444uLL,5530155812000479380uLL,15981757170573654552uLL,4675046458149244129uLL,2489296612409529272uLL,
			12386037946474151131uLL,8658442312554706155uLL,8874157812623055100uLL,6140724949905479894uLL,15418745687405459119uLL,13895914993188848423uLL,9556115709537732522uLL,12672089815983824533uLL,
			11022115975250883260uLL,11631144501635928478uLL,10068567402648157887uLL,15585181310076215000uLL,4443899686600465383uLL,8446465802036440528uLL,18445007269692960308uLL,17277236739883758072uLL,
			15521951703717340680uLL,17989189868000292115uLL,1330104659065418023uLL,13688679860856506977uLL,2855077686773083688uLL,9736838051610145669uLL,10217505798407200971uLL,2164439936412927472uLL,
			16208779620753766838uLL,3419569954110867474uLL,5285363830857915690uLL,16393124321428419362uLL,11769928460183444394uLL,3444228419733335342uLL,6032671373252452176uLL,18314362433437586719uLL,
			18130172420186012935uLL,14396177187499693958uLL,5709639304694816487uLL,9082312804949863139uLL,30863931389215876uLL,11633923575525893828uLL,5858006355282298763uLL,12365298303993280064uLL,
			4625697826774647117uLL,16389986023369863409uLL,12880242455579091767uLL,7400915451171144248uLL,14192838914951190731uLL,6043266920214975958uLL,9035700433990999553uLL,11230870288879288642uLL,
			2240713351413902394uLL,4068141929580391787uLL,9996809700359695781uLL,14176998424650875954uLL,7307094239716027513uLL,5905755948449579078uLL,7865210136678296332uLL,11109198328920274544uLL,
			11653452566523002415uLL,13676304316040722692uLL,11804538590384178575uLL,8673653999513183878uLL,12318501654215123349uLL,8222571359940894769uLL,669947350165678378uLL,163870934742389996uLL,
			8412947787672405849uLL,1552783721916502608uLL,8351817943404719882uLL,210188991416534164uLL,6774167356393361817uLL,6014520241037468201uLL,13463183227819343431uLL,10569269612910390368uLL,
			6684395969445156007uLL,13125997501109174317uLL,14065122692351311884uLL,10639496643443827898uLL,9843310822373645749uLL,8542218599759269755uLL,5548476200069833603uLL,1695918966603845794uLL,
			10712853583932666712uLL,12408932065029675302uLL,10439258409204381592uLL,6717125655954328028uLL,14979600159669177157uLL,4707736160297765496uLL,12025133253120465370uLL,2333904609861796820uLL,
			6823335973917404705uLL,11418741490364862996uLL,7737992346370806195uLL,14406831333815210345uLL,9175988310160027623uLL,5819766326255984103uLL,4689878411929638412uLL,13589957492015763788uLL,
			783076902326988643uLL,8343122386915205178uLL,2032707286722131213uLL,12477572853335455641uLL,18376253224471856899uLL,10567317309827107832uLL,13995687695943913289uLL,18132670704646743866uLL,
			9043392377534415735uLL,17438574978776001712uLL,6331929356254153553uLL,14488275671571792461uLL,12978973066724513830uLL,17813571294989421903uLL,17205737163799570404uLL,18340474749932933668uLL,
			13741866509667347292uLL,14456692894142541933uLL,1801348244918632779uLL,15715078680138189648uLL,18027561813482533383uLL,11986086072287642866uLL,12704151305810541938uLL,4679674282285102892uLL,
			9859529087844838553uLL,3409477485272509650uLL,15027521875569298484uLL,7494818401498322339uLL,6642723148816954963uLL,5114650852841757993uLL,2142061761464431398uLL,16206298603625566175uLL,
			9488229432894747690uLL,13832361723814107932uLL,3573140015495452507uLL,15250611860936549115uLL,3522373236735534901uLL,8316549252604920902uLL,15201685032000701145uLL,1068471839048853086uLL,
			6914169421731976118uLL,12301054377747359542uLL,18074077013183367159uLL,5527568178722776048uLL,14483188401387307185uLL,4470547027258336846uLL,12737980885602359344uLL,6370077280380271102uLL,
			6380490578759719281uLL,6783825788960444680uLL,5416777919914854425uLL,4485213344363974330uLL,2440602309980655870uLL,77938083112858571uLL,3424926331605318420uLL,6598803032141293804uLL,
			6232815409417150674uLL,15421484937602372201uLL,3955283582247741178uLL,2574805773226817160uLL,12423610586669714975uLL,14868186620344394235uLL,15412526119535490660uLL,15933746031704124668uLL,
			8202636993213935575uLL,2324168730932486973uLL,15369655460010525151uLL,17443295150475928874uLL,14333986102081288896uLL,16262586201230403041uLL,15756021381126611819uLL,3813563947393427556uLL,
			5959946939948882447uLL,15769518452087016469uLL,2232514953681143989uLL,7030523558105192018uLL,7977710551694658809uLL,14870420896216133421uLL,10641524980527318351uLL,11918058549056943711uLL,
			3485565041805507514uLL,17949466825984342738uLL,12595130718770762168uLL,13353914708017681054uLL,1791922490259332298uLL,1124027258635982437uLL,15419266848643604380uLL,3495808112266356593uLL,
			9797106408838904360uLL,5032963941874194739uLL,10175681351977022072uLL,14565767783550229215uLL,5453713790341523986uLL,14108628074502739177uLL,16134628843530308303uLL,3739846935977000579uLL,
			18264555797478373300uLL,17659052231789567107uLL,6582119270418453583uLL,5643690101035242688uLL,1299406052276872173uLL,17612866572148173010uLL,5879607705029986540uLL,1855388645874246558uLL,
			16503878005505102986uLL,5154301759270910347uLL,6719350255657264038uLL,2877345828570505738uLL,6870697482709050792uLL,15793109098009464894uLL,11359426023130093852uLL,2890116517343798868uLL,
			527561862435921035uLL,11840150424906007113uLL,16095703867096500597uLL,9058817867392970112uLL,15358451050814812405uLL,12288143130023622406uLL,2145309460904681429uLL,16657833549834988284uLL,
			5244899847494777291uLL,4525019447138276837uLL,5397028556955533797uLL,9474125203525332203uLL,3821906626571030218uLL,16421910128535026006uLL,12828346901533573597uLL,836147723693007698uLL,
			13937219860667950811uLL,10522843459094889527uLL,6411261601983483909uLL,13711305456147155015uLL,16881179941245660574uLL,12417093830101344982uLL,8833017114230908698uLL,16075522375837305069uLL,
			493897606821815931uLL,16522637752724252810uLL,8104558116350581109uLL,2052918357009558040uLL,7884571878470845066uLL,13401799453410698764uLL,5635504124303817468uLL,2065019448441083692uLL,
			15315870323250330091uLL,6257643496362354797uLL,3889114523020473582uLL,11541904538776239053uLL,1643955117393737213uLL,10282616937400142894uLL,148062411388634048uLL,6399276064122475393uLL,
			7916686773793920506uLL,11283483828749163491uLL,17917187030413060680uLL,7163507175096970599uLL,567608771170389437uLL,9601547483342240614uLL,6389496033099190908uLL,18418164587166633327uLL,
			13434253059962442226uLL,15737837671145011657uLL,12725034262062438317uLL,17215890070194202913uLL,8037318705680197728uLL,7520443689604803233uLL,10070850920714069156uLL,12244252696211821689uLL,
			7067249918218366221uLL,2810184793791101325uLL,9682711766512546123uLL,5727233433592471781uLL,13406103016684294141uLL,12708153994035769553uLL,2710045303142526228uLL,6119089952567118093uLL,
			4646514172896858110uLL,8632356436499283620uLL,18047674347516024003uLL,8202692776638651634uLL,6317069346339693253uLL,14029910113379075634uLL,14277011979170739709uLL,15249639715342408281uLL,
			386712753501873896uLL,12830575677406594986uLL,11723227556426773223uLL,11011372633388306687uLL,1985918837873297957uLL,18243156905011081623uLL,11780000136724347466uLL,7562843744510080245uLL,
			9297904815432990327uLL,5266459898317752547uLL,3306131130384880420uLL,17927611959487728976uLL,9210526925909491069uLL,13494071904045170673uLL,13450523842527036894uLL,3993096913812396060uLL,
			14328351992377383164uLL,13639137782342808769uLL,11586934922880127817uLL,11313945913655838419uLL,6161875543054743701uLL,2967566173299472429uLL,17098576233074246097uLL,10153506204518631755uLL,
			16759153165318392049uLL,16927225691200847887uLL,4332210924997199640uLL,12411237030573507758uLL,6279876872025501199uLL,13031259482759981868uLL,15468401247775171808uLL,9049199465032183401uLL,
			9091566227849295682uLL,6397118356476866080uLL,4806024390179212587uLL,17753234492451221188uLL,2622276340673043669uLL,5230425044952243193uLL,15403549562397428774uLL,17926678337441407621uLL,
			18007796388374641102uLL,10477032709622684009uLL,7943845436893854936uLL,11397909515504969111uLL,11232455285320628114uLL,11463743738707302820uLL,10998247345342730301uLL,16620563924832236218uLL,
			2810107521753912876uLL,3548239971859304347uLL,17505125038684116941uLL,9927726218066093333uLL,13526299365835135536uLL,15646670706473689681uLL,8821893658425170932uLL,4377675135506831528uLL,
			13589227800711985736uLL,17354425255962006623uLL,9799563040690688065uLL,12782400052915255148uLL,5848358251977548577uLL,6604484850363463813uLL,4436738553023561728uLL,2998504208953361659uLL,
			13193215897096223855uLL,10776069018751342631uLL,12284515715964311055uLL,12799564792291662353uLL,5288765703984656988uLL,12867031186712529129uLL,1311809804362618679uLL,17751503715277064577uLL,
			10895208064832770935uLL,3528954576306075697uLL,16113746734086975882uLL,16624345721218020350uLL,12154957608702634286uLL,2563892094412804452uLL,17342962102244011216uLL,11978618514479805811uLL,
			8405224024069591234uLL,4006240623330931906uLL,11079018062018992543uLL,14526044596236694842uLL,8533194878410441237uLL,7805222162442214215uLL,3344994556976252123uLL,16274758010970744207uLL,
			11506875372220225694uLL,9324367902342009325uLL,5185294295400889956uLL,13350474306558535894uLL,4124442764632096000uLL,13905160337571418260uLL,13848716547110852671uLL,9510140318218295714uLL,
			7974128351732198667uLL,14528458544128196993uLL,8747632922525345454uLL,14338816286593159757uLL,8377894527166728085uLL,3363643311866720046uLL,3870613169480711162uLL,14771082010255025160uLL,
			7789369171213285892uLL,4446200609017507170uLL,7465393529951603172uLL,14024591705583468687uLL,10678284875964687154uLL,17604319782263549089uLL,11308335426626202671uLL,545584493268509536uLL,
			52048431294306956uLL,8347029608898736024uLL,16904990545512447216uLL,5935871475883618611uLL,5057416705264921817uLL,14152420217387549811uLL,17632127676763064141uLL,2618657911656578624uLL
	};


	// Returns the square index mirrored by rank
	constexpr int mirrorRank(int pSqIndex) {
		return pSqIndex ^ 56;
	}


	// Functions
	extern void init();
	extern int BitScanForward(uint64_t pNum);
	extern int BitScanReverse(uint64_t pNum);
	extern int popcount(uint64_t pBits);
	extern char GetFENCharFromSpin(int pSpin);
	extern int GetSpinFromChar(char pFENChar);
	extern uint64_t GetRay(int pSqIndex, RayTypeEnum pRayType, bool pExcludeEdge);
	extern void CreateRay(int pIndex, uint64_t pRays[8]);
	extern void CreateStructureRay(int pIndex, uint64_t pRays[2]);
	extern uint64_t GetRowMask(int pSqIndex);
	extern std::string GetBinaryStr(uint64_t pInt);
	extern void CreateMoveLookupTable();
	extern int CreateBlockerCombinationForRay(uint64_t pRays_NoEdge, uint64_t pAllBlockerCombinations[4096]);

	extern void Split(const std::string& pStr, char pDelim, std::vector<std::string> &pReturnVector);
	extern int GetSpinFromPieceName(std::string pPieceName);
	extern std::string GetPieceNameFromChar(char pFENChar);


	static const std::map<int, std::string> SearchErrorMessage = {
			{0, ""},
			{1, "Incorrect number of White Kings" },
			{2, "Incorrect number of Black Kings" },
			{3, "Incorrect number of White Pieces" },
			{4, "Incorrect number of Black Pieces" },
			{5, "Total number of White Pawns plus White Queens is too high"},
			{6, "Total number of Black Pawns plus Black Queens is too high"},
			{7, "Total number of White Pawns plus White Bishops is too high"},
			{8, "Total number of Black Pawns plus Black Bishops is too high"},
			{9, "Total number of White Pawns plus White Knights is too high"},
			{10, "Total number of Black Pawns plus Black Knights is too high"},
			{11, "Total number of White Pawns plus White Rooks is too high"},
			{12, "Total number of Black Pawns plus Black Rooks is too high"},
			{13, "Total White Pawn count too high"},
			{14, "Total Black Pawn count too high"},
			{15, "White Pawns not allowed on Ranks 1 or 8"},
			{16, "Black Pawns not allowed on Ranks 1 or 8"},
			{17, "White King is in Check, but it is Black's turn to move"},
			{18, "Black King is in Check, but it is White's turn to move"},
			{19, "White King side castling availability is not correctly set"},
			{20, "White Queen side castling availability is not correctly set"},
			{21, "Black King side castling availability is not correctly set"},
			{22, "Black Queen side castling availability is not correctly set"},
			{NNUE_ERROR, "Unable to load NNUE data"},
			{NNUE_MEMORY_ALLOCATION_ERROR, "Unable to allocate enough memory for an NNUE file"},
			{NNUE_FILE_OPEN_ERROR, "Unable to open a required NNUE file"},
			{TRANSPOSITIONTABLE_ERROR, "Failed to allocate transposition table"},
			{FREELARGEPAGEMEMORY_ERROR, "Failed to free large page memory"}
			
			
	};

	
}


